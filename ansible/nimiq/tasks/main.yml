---
- name: Ensure node working directory exists
  ansible.builtin.file:
    path: /opt/nimiq/{{ node_type }}
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Set sync_mode based on node_type
  ansible.builtin.set_fact:
    sync_mode: "{{ 'history' if node_type == 'history_node' else 'full' }}"

- name: Validator | Configuration
  when: node_type == "validator"
  block:
    - name: Validator | Create secrets directory
      ansible.builtin.file:
        path: /opt/nimiq/validator/secrets
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Validator | Generate validator keys
      community.docker.docker_container:
        name: generate_validator_keys
        image: "{{ gen_keys_docker_image }}"
        state: started
        volumes:
          - "/opt/nimiq/validator/secrets:/keys"
        user: "0"
        detach: false
        cleanup: true
      when: not lookup('file', '/opt/nimiq/validator/secrets/address.txt', errors='ignore')

    - name: Validator | Zip secrets
      community.general.archive:
        path: /opt/nimiq/validator/secrets
        dest: /root/secrets.zip
        owner: root
        group: root
        mode: '0644'
      when: not lookup('file', '/root/secrets.zip', errors='ignore')

    - name: Validator | Read keys for validator configuration
      ansible.builtin.set_fact:
        validator_address: "{{ lookup('file', '/opt/nimiq/validator/secrets/address.txt') | regex_search('Address:\\s*(.*)', '\\1') | join('') }}"
        fee_key: "{{ lookup('file', '/opt/nimiq/validator/secrets/fee_key.txt') | regex_search('Private Key:\\s*(.*)', '\\1') | join('') }}"
        signing_key: "{{ lookup('file', '/opt/nimiq/validator/secrets/signing_key.txt') | regex_search('Private Key:\\s*(.*)', '\\1') | join('') }}"
        voting_key: "{{ lookup('file', '/opt/nimiq/validator/secrets/vote_key.txt') | regex_search('Secret Key:\\s*(.*)', '\\1') | join('') }}"

- name: Template configuration files
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - { src: 'config.toml.j2', dest: '/opt/nimiq/{{ node_type }}/client.toml' }
    - { src: 'nginx.conf.j2', dest: '/opt/nimiq/{{ node_type }}/nginx.conf' }
    - { src: 'docker-compose.yml.j2', dest: '/opt/nimiq/{{ node_type }}/docker-compose.yml' }

- name: Start Nimiq Docker container
  community.docker.docker_compose_v2:
    project_src: /opt/nimiq/{{ node_type }}
    state: present
    pull: always
